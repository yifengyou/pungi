from common/multilib import *
from common/include-excludes import *
#from images import *

# PRODUCT INFO 
release_name = "Rocky Linux" 
release_short = "Rocky-i686"
release_version = "8"
version = "8.7"

# GENERAL SETTINGS
comps_file = {
        'scm': 'git',
        'repo': 'https://git.rockylinux.org/rocky/comps.git',
        'branch': 'main',
        'file': 'comps-rocky-8.7.xml',
}

#link_type = 'hardlink-or-copy'
link_type = 'copy'

module_defaults_dir = {
        'scm': 'git',
        'repo': 'https://git.rockylinux.org/rocky/rocky-module-defaults.git',
        'branch': 'r8.7',
        'dir': '.',
}

multilib = [
    ('^.*$', {
        'x86_64': ['devel', 'runtime']
    }),
]

variants_file = 'variants-i686.xml'
sigkeys = ['6D745A60']
# Change to true for 8.7
hashed_directories = False

tree_arches = ['i686']

# RUNROOT SETTINGS
runroot_channel = 'image'
runroot_tag = 'dist-rocky8-build'
runroot_method = 'koji'

# PKGSET
pkgset_source = "koji"
koji_profile = "koji"

# PKGSET - KOJI
pkgset_koji_tag = "dist-rocky8-compose"
pkgset_koji_inherit = False
pkgset_koji_module_tag = "dist-rocky8-module-compose"
#pkgset_allow_reuse = False
pkgset_allow_reuse = True

filter_system_release_packages = False

createiso_break_hardlinks = True

# GATHER
#gather_prepopulate = "rocky-i686-packages.json"

gather_method = {
        "^(?!(AppStream|PowerTools)).*$":{
                "comps": "deps"
        },
        "^(AppStream|PowerTools)$": "hybrid",
}

gather_backend = "dnf"
check_deps = False
greedy_method = "none"
repoclosure_backend = "dnf"

# CREATEREPO
createrepo_deltas = False
createrepo_database = True
createrepo_c = True
createrepo_checksum = "sha256"
createrepo_use_xz = True
createrepo_num_threads = 8
createrepo_num_workers = 8
createrepo_extra_args = ['--distro=cpe:/o:rocky:rocky:8,Rocky Linux 8', '--revision=8.7']

# CHECKSUMS
media_checksums = ['sha256']
media_checksum_one_file = True
create_jigdo = False

# BUILDINSTALL
bootable = True
buildinstall_method = "lorax"

lorax_options = [
    ("^.*$", {
        "*": {
            "noupgrade": False,
            "rootfs_size": 3,
            "version": "8"
        }
    })
]

buildinstall_skip = [
    ("^(AppStream|PowerTools|HighAvailability|ResilientStorage|RT)$", {
       "*": True
       }),
]

image_name_format = {
    "^BaseOS$": "{release_short}-8.7-{arch}-{disc_type}{disc_num}{suffix}",
    "^Minimal$": "{release_short}-8.7-{arch}-minimal{suffix}",
    ".*": "{release_short}-8.7-{arch}-{disc_type}{disc_num}{suffix}",
}

image_volid_formats = [ '{release_short}-8.7-{arch}-{disc_type}', ]

# CREATEISO
create_optional_isos = False

createiso_skip = [
    ('^(BaseOS|AppStream|Minimal|PowerTools|HighAvailability|ResilientStorage|RT)$', {
        '*': True,
        'src':True
    }),
]

extra_isos = {
    "BaseOS": [{
        "include_variants": ["AppStream"],
        "filename": "{release_short}-8.7-{arch}-{disc_type}{disc_num}{suffix}",
        "skip_src": True,
    }],
    "Minimal": [{
        "include_variants": ["BaseOS"],
        "filename": "{release_short}-8.7-{arch}-minimal{suffix}",
        "skip_src": True,
    }]
}


restricted_volid = True

# LOOKASIDE
variant_as_lookaside = [
    ('AppStream', 'BaseOS'),
    ('PowerTools', 'BaseOS'),
    ('PowerTools', 'AppStream'),
    ('HighAvailability', 'BaseOS'),
    ('HighAvailability', 'AppStream'),
    ("ResilientStorage", "BaseOS"),
    ("ResilientStorage", "AppStream"),
#    ("NFV", "BaseOS"),
#    ("NFV", "AppStream"),
]

extra_files = [
    ("^.*$", {
        "*": [
            {
                "scm": "git",
                "repo": "https://git.rockylinux.org/original/rpms/rocky-release.git",
                "branch": "r8",
                "file": [
                    'SOURCES/LICENSE',
                    'SOURCES/EULA',
                    'SOURCES/COMMUNITY-CHARTER',
                    'SOURCES/RPM-GPG-KEY-rockyofficial',
                ],
                "target": "",
            },
        ]
    }),
]

productimg = False

translate_paths = [
	("/mnt/koji", "https://koji.rockylinux.org/kojifiles")
	#("/compose", "http://172.22.0.123/compose"),
]

